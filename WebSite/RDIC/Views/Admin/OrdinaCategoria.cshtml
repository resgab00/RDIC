@model List<RDIC.Models.Categoria>

<div class="col ml-4 mr-4 content">
    <h1>Elenco categorie</h1>
    <ol class="sortAdmin">
        @foreach (RDIC.Models.Categoria item in Model)
        {
            <li>
                <h4>@item.Order - @item.DescriptionIT </h4>
                <input type="hidden" id="hddCatId" value="@item.Id" />
            </li>
        }
    </ol>
    <button id="productSave" type="button" onclick="updateOrderCat();" class="btn btn-primary">Salva</button><br /><br />
    <br />
    <div id="productError">
        <img src="~/img/product-error.png" width="70" />
        <label style="width:700px;font-size:large;color:#ff0000;">Errore durante il salvataggio. Riprovare in un secondo momento, se l'errore persiste contattare l'amministratore del sistema</label>
    </div>
    <div id="productOk">
        <img src="~/img/product-ok.png" width="64" />
        <label style="width:700px;font-size:large;">Salvataggio avvenuto con successo</label>
    </div>
    <div id="productLoader" class="loader07"></div>

</div>
<script>
    function onInputFormChange() {
        $('#productSave').attr('disabled', false);
        $("#productLoader").hide();
        $("#productError").hide();
        $("#productOk").hide();
    }
    $(document).ready(function () {
        var group = $("ol.sortAdmin").sortable({
            group: 'sortAdmin',
            pullPlaceholder: false,
            // animation on drop
            onDrop: function ($item, container, _super) {
                var $clonedItem = $('<li/>').css({ height: 0 });
                $item.before($clonedItem);
                $clonedItem.animate({ 'height': $item.height() });

                $item.animate($clonedItem.position(), function () {
                    $clonedItem.detach();
                    _super($item, container);
                });
                onInputFormChange();
            },
            // set $item relative to cursor position
            onDragStart: function ($item, container, _super) {
                var offset = $item.offset(),
                    pointer = container.rootGroup.pointer;

                adjustment = {
                    left: pointer.left - offset.left,
                    top: pointer.top - offset.top
                };

                _super($item, container);
            },
            onDrag: function ($item, position) {
                $item.css({
                    left: position.left - adjustment.left,
                    top: position.top - adjustment.top
                });
            }
        });

        //$("#frmUpdateProduct").on('input change', function () {
        //});
        $('#productSave').attr('disabled', true);
        $("#productLoader").hide();
        $("#productError").hide();
        $("#productOk").hide();
    });


</script>
